/*
 * Jakefile
 * test
 *
 * Created by You on November 12, 2009.
 * Copyright 2009, Your Company All rights reserved.
 */

var ENV = require("system").env,
    FILE = require("file"),
    task = require("jake").task,
    SYSTEM = require("system"),
	OS = require("os"),
    FileList = require("jake").FileList,
    app = require("cappuccino/jake").app,
    configuration = ENV["CONFIG"] || ENV["CONFIGURATION"] || ENV["c"] || "Debug";
    
var COUCH_URL = "http://localhost:5984";
    
task("build", function(){});

task("test", function()
{
    var tests = new FileList('tests/*Test.j');
    var cmd = ["ojtest"].concat(tests.items());
    var cmdString = cmd.map(OS.enquote).join(" ");

    var code = OS.system(cmdString);
    if (code !== 0)
        OS.exit(code);
});

task("press", ["build", "test"], function()
{
    var cmd = "press . ../Pressed";
    
    rm_rf("../Pressed");
    
    var code = OS.system(cmd);
    
    if (code !== 0)
    {
        OS.exit(code);
    }
});

// task ("deploy", ["build", "test", "press"], function()
task("deploy", ["build", "test"], function()
{
    //var cmd = "scp -r projectosl@shellder.omnigroup.com:/Library/WebServer/Documents/ ../Pressed";
    var cmd = "scp -r . projectosl@shellder.omnigroup.com:/Library/WebServer/Documents/";
    
    OS.system(cmd);
});

task("metrics", function()
{
   var releases = ["Release-1", "Release-2", "Release-3", "Release-4", "Release-5", "Release-6"];
   
   var checkout = "git checkout ";
   for (var i = 0; i < releases.length; i++)
   {
       print(releases[i]);
       OS.system(checkout + releases[i]);
       OS.system("beancounter");
       print("\n\n");
   }
   
   OS.system(checkout + "master");
});

task("couch:reset", ["couch:reset:views"]);

task("couch:reset:views", function()
{    
    var databases = getDatabases();
    var views = ["find", "project", "user", "message", "find", "find"];
    var view_path = "_design/finder";
    var path_to_views = "../utilities/couch/";
    
    // get current revs
    var revs = [];
    for (var i = 0; i < databases.length; i++)
    {
        var command = "curl " + COUCH_URL + "/" + databases[i] + "/" + view_path;
        var process = OS.popen(command);
        var view = process.stdout.read();
        var json = eval("(" + view + ")");
        revs[i] = json._rev;
    }
    
    // delete old views
    for (var i = 0; i < databases.length; i++)
    {
        var command = "curl -X DELETE " + COUCH_URL + "/" + databases[i] + "/" + view_path + "?rev=" + revs[i];
        OS.system(command);
    }
    
    // create new views
    for (var i = 0; i < databases.length; i++)
    {
        var command = "curl -T " + path_to_views + views[i] + " -H \"Content-Type: application/json\" " + COUCH_URL + "/" + databases[i] + "/" + view_path;
        OS.system(command);
    }
});

task("couch:reset:all", function()
{
    var databases = getDatabases();

    // Delete databases
    for (var i = 0; i < databases.length; i++)
    {
        var command = "curl -X DELETE " + COUCH_URL + "/" + databases[i];
        OS.system(command);   
    }

    // Create databases
    for (var i = 0; i < databases.length; i++)
    {
        var command = "curl -X PUT " + COUCH_URL + "/" + databases[i];
        OS.system(command); 
    }
});

task("genconfig", function()
{
    print("Generating your configuration files\n");
    print("===================================\n");
    print("Please input your base url\n");
    print("  e.g. /~hammerdr/osl/src/\n\n");
    var baseURL = SYSTEM.stdin.readLine();
    
    var baseURL = baseURL.replace("\n", "");
    
    var htaccess = "RewriteEngine On\nRewriteBase " + baseURL + "api/\nRewriteRule ^(.*)$ REST.php\n";
    var phpConfig = "<?php\n$urlPrefix = \"" + baseURL + "api/\";\n$couchDbBaseUrl = \"http://localhost:5984/\";\n?>";
    
    FILE.remove("api/.htaccess");
    FILE.remove("api/REST-config.php");
    
    FILE.write("api/.htaccess", htaccess);
    FILE.write("api/REST-config.php", phpConfig);
});

function getDatabases() {
    return ["error", "project", "user", "message", "glossary", "feedback"];
}